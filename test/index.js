// Generated by CoffeeScript 1.3.3
(function() {
  var Repository, TreeStore, app, assert, backend, blobStore, contentAddressable, createApp, repo, req, treeStore, url, _ref;

  assert = require('assert');

  req = require('superagent');

  _ref = require('synclib'), Repository = _ref.Repository, TreeStore = _ref.TreeStore, backend = _ref.backend;

  contentAddressable = require('content-addressable');

  createApp = require('../lib/index');

  blobStore = contentAddressable.fileSystem(process.env.HOME + '/syncstore');

  treeStore = contentAddressable.memory();

  repo = new Repository(treeStore);

  app = createApp({
    blobStore: blobStore,
    repository: repo
  });

  url = function(path) {
    return 'http://localhost:3000' + path;
  };

  before(function(done) {
    return app.listen(3000, 'localhost', done);
  });

  after(function(done) {
    return blobStore.store.adapter["delete"](done);
  });

  describe('http-interface', function() {
    return describe('/blob', function() {
      return it('should POST some data and return the hash to GET it', function(done) {
        var data;
        data = {
          data: "some data"
        };
        return req.post(url('/blob')).send(data).end(function(res) {
          var hash;
          hash = res.body.hash;
          return req.get(url('/blob/' + hash)).set('Accept', 'application/json').end(function(res) {
            assert.equal(res.body.data, data.data);
            return done();
          });
        });
      });
    });
  });

}).call(this);
